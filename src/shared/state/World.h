// Generated by dia2code
#ifndef STATE__WORLD__H
#define STATE__WORLD__H

#include <stdlib.h>
#include <vector>

namespace state {
  class Team;
  class MainQuest;
  class Cell;
  class Character;
}

#include "Direction.h"
#include "Team.h"
#include "Cell.h"
#include "MainQuest.h"

namespace state {

  /// class World - 
  class World {
    // Associations
    // Attributes
  private:
    std::size_t I;
    std::size_t J;
    std::vector<std::vector<Cell*>> grid;
    std::vector<Team*> teams;
    std::vector<MainQuest*> quests;
    // Operations
  public:
    World (std::size_t i, std::size_t j);
    std::size_t getI ();
    std::size_t getJ ();
    std::vector<std::vector<Cell*>> getGrid ();
    Cell* getCell (std::size_t i, std::size_t j);
    void setCell (std::size_t i, std::size_t j, Cell* cell);
    void addCharacter ();
    void addCharacter (std::size_t iteam, int id = 0, std::size_t i = 0, std::size_t j = 0, Direction direction = south);
    void addCharacter (Character* character, Team* team, std::size_t i = 0, std::size_t j = 0);
    void moveCharacter (Character* character, std::size_t i, std::size_t j);
    void delCharacter (std::size_t i = 0, std::size_t j = 0);
    void delCharacter (Character* character);
    Character* getCharacter (std::size_t i, std::size_t j);
    std::vector<Character*> getMainCharacters ();
    std::vector<Character*> getCharacters ();
    std::vector<Team*> getTeams ();
    void addTeam ();
    void addTeam (Team* team);
    void addQuest (MainQuest* quest);
    void delQuest (MainQuest* quest);
    // Setters and Getters
  };

};

#endif
