// Generated by dia2code
#ifndef STATE__TEAM__H
#define STATE__TEAM__H

#include <string>
#include <stdlib.h>
#include <vector>
#include <memory>

namespace state {
  class Inventory;
  class Character;
}

#include "Inventory.h"
#include "Character.h"

namespace state {

  /// class Team - 
  class Team {
    // Associations
    // Attributes
  protected:
    std::string name;
    std::size_t indexMainCharacter;
    std::vector<std::unique_ptr<Character>> characters;
    std::unique_ptr<Inventory> inventory;
    // Operations
  public:
    Team (std::string name = "");
    void addCharacter (Character& character);
    void delCharacter (std::size_t i);
    Character& getMainCharacter ();
    Character& getCharacter (std::size_t i);
    void setMainCharacter (std::size_t i);
    Inventory& getInventory ();
    // Setters and Getters
    const std::string& getName() const;
    void setName(const std::string& name);
    const std::size_t& getIndexMainCharacter() const;
    void setIndexMainCharacter(const std::size_t& indexMainCharacter);
    const std::vector<std::unique_ptr<Character>>& getCharacters() const;
    void setCharacters(const std::vector<std::unique_ptr<Character>>& characters);
    void setInventory(const std::unique_ptr<Inventory>& inventory);
  };

};

#endif
