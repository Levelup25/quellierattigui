// Generated by dia2code
#ifndef STATE__STATE__H
#define STATE__STATE__H

#include <stdlib.h>

namespace state {
  class World;
  class Fight;
  class Observable;
}

#include "Observable.h"
#include "Fight.h"
#include "World.h"

namespace state {

  /// class State - 
  class State : public state::Observable {
    // Associations
    // Attributes
  public:
    bool isInventoryOpened     = false;
  private:
    World* world;
    Fight* fight     = nullptr;
  protected:
    int epoch     = 0;
    int epochRate     = 15;
    // Operations
  public:
    State (std::size_t i = 144, std::size_t j = 144);
    World* getWorld ();
    bool isFighting ();
    Fight* getFight ();
    void setFight (Fight* fight);
    void delFight ();
    // Setters and Getters
    int getEpoch() const;
    void setEpoch(int epoch);
    int getEpochRate() const;
    void setEpochRate(int epochRate);
  };

};

#endif
