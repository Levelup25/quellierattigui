// Generated by dia2code
#ifndef ENGINE__FIGHTCOMMAND__H
#define ENGINE__FIGHTCOMMAND__H

#include <vector>
#include <json/json.h>

namespace state {
  class Team;
  class State;
};
namespace engine {
  class Engine;
  class FightCommand;
  class Command;
}

#include "Command.h"
#include "state/Team.h"

namespace engine {

  /// class FightCommand - 
  class FightCommand : public engine::Command {
    // Associations
    // Attributes
  private:
    state::Team* att;
    state::Team* def;
    std::vector<int> pv;
    std::vector<int> pa;
    std::vector<int> pm;
    // Operations
  public:
    FightCommand (state::State* state, Engine* engine, state::Team* att, state::Team* def, bool reverse = false);
    void execute ();
    void const serialize (Json::Value& out);
    static FightCommand* deserialize (const Json::Value& in, state::State* state, engine::Engine* engine = nullptr);
    // Setters and Getters
  };

};

#endif
