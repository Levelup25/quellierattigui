// Generated by dia2code
#ifndef RENDER__RENDER__H
#define RENDER__RENDER__H

#include <stdlib.h>
#include <SFML/Graphics.hpp>
#include <vector>

namespace state {
  class State;
};
namespace engine {
  class Engine;
};
namespace state {
  class Character;
};
namespace render {
  class Sprites;
};
namespace engine {
  class FightCommand;
  class AttackCommand;
  class MoveCommands;
}

#include "engine/FightCommand.h"
#include "engine/AttackCommand.h"
#include "engine/MoveCommands.h"
#include "state/Character.h"
#include "engine/Engine.h"
#include "state/State.h"

namespace render {

  /// class Render - 
  class Render {
    // Associations
    // Attributes
  private:
    state::State* state;
    engine::Engine* engine;
    int nb;
    int l;
    int h;
    state::Character* selectedcharacter;
    int abilityNumber     = 0;
    int xv     = 0;
    int yv     = 0;
    std::size_t n     = 12;
    std::size_t m     = 12;
    // Operations
  public:
    Render (state::State* state, engine::Engine* engine, int nb = 2, int l = 34, int h = 24);
    void drawMap (sf::RenderWindow& window, sf::View& view, Sprites& sprites);
    void drawZones (sf::RenderWindow& window, sf::View& view);
    void drawCharacters (sf::RenderWindow& window, sf::View& view, Sprites& sprites, std::vector<state::Character*> chars);
    void drawAnimations (sf::RenderWindow& window, sf::View& view, Sprites& sprites);
    void display ();
    // Setters and Getters
  };

};

#endif
