// Generated by dia2code
#ifndef RENDER__ELEMENTCOMPOSITE__H
#define RENDER__ELEMENTCOMPOSITE__H

#include <vector>
#include <SFML/Graphics.hpp>

namespace render {
  class Rectangle;
  class Element;
}

#include "Element.h"

namespace render {

  /// class ElementComposite - 
  class ElementComposite : public render::Element {
    // Associations
    // Attributes
  public:
    Rectangle* pborder;
  protected:
    std::vector<Element*> children;
    sf::Vector2f posParent;
    sf::Vector2f size;
    // Operations
  public:
    ElementComposite ();
    void draw (sf::RenderTarget& target, sf::RenderStates states) const;
    void transmitEvent (sf::Event event, sf::Vector2f posMouse);
    void add (Element* pchild);
    void remove (Element* pchild);
    // Setters and Getters
    const std::vector<Element*>& getChildren() const;
    void setChildren(const std::vector<Element*>& children);
    const sf::Vector2f& getPosParent() const;
    void setPosParent(const sf::Vector2f& posParent);
    const sf::Vector2f& getSize() const;
    void setSize(const sf::Vector2f& size);
  };

};

#endif
