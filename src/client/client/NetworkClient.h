// Generated by dia2code
#ifndef CLIENT__NETWORKCLIENT__H
#define CLIENT__NETWORKCLIENT__H

#include <SFML/Graphics.hpp>
#include <SFML/Network.hpp>
#include <string>
#include <vector>
#include <json/json.h>

namespace state {
  class State;
};
namespace engine {
  class Engine;
};
namespace ai {
  class AI;
};
namespace render {
  class Render;
}

#include "render/Render.h"
#include "engine/Engine.h"
#include "state/State.h"
#include "ai/AI.h"

namespace client {

  /// class NetworkClient - 
  class NetworkClient {
    // Associations
    // Attributes
  private:
    sf::Http http;
    std::string url;
    int port;
    int idLastExecutedCmd;
    state::State* state;
    engine::Engine* engine;
    ai::AI* ai;
    // Operations
  public:
    NetworkClient (const std::string& url, int port);
    void state_init (state::State* state);
    void launch_threads (state::State* state, render::Render* render, engine::Engine* engine, ai::AI* ai);
    void run ();
  protected:
    std::vector<engine::Command*> getServerCommands (Json::Value& out);
    void putServerCommand (engine::Command* command);
    int getGameStatus ();
    // Setters and Getters
  };

};

#endif
