// Generated by dia2code
#ifndef SERVER__GAME__H
#define SERVER__GAME__H

#include <vector>
#include <memory>

namespace server {
  class PlayerDB;
};
namespace state {
  class State;
};
namespace engine {
  class Engine;
};
namespace ai {
  class AI;
};
namespace state {
  class Fight;
}

#include "state/Fight.h"
#include "PlayerDB.h"
#include "state/State.h"
#include "engine/Engine.h"
#include "GameStatus.h"

namespace server {

  /// class Game - 
  class Game {
    // Associations
    server::GameStatus status;
    // Attributes
  public:
    std::vector<int> teamIndexes;
    std::vector<std::shared_ptr<state::Fight>> fights;
  private:
    PlayerDB* playerDB;
    state::State* state;
    engine::Engine* engine;
    ai::AI* ai;
    // Operations
  public:
    Game ();
    PlayerDB* getPlayerDB ();
    state::State* getState ();
    engine::Engine* getEngine ();
    void run ();
    // Setters and Getters
    GameStatus getStatus() const;
    void setStatus(GameStatus status);
  };

};

#endif
